version: '2.2'
networks:
    tracking-network:
        driver: bridge
        ipam:
            driver: default
            config:
              - subnet: 172.18.10.0/24
                gateway: 172.18.10.1
services:
    korisnici-db:
        image: mysql:5.7
        volumes:
            - /opt/data-korisnici:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: iamroot
            MYSQL_USER: spring
            MYSQL_PASSWORD: spring
            MYSQL_DATABASE: korisnici
        expose:
            - 3306
        ports:
            - 3306:3306
        networks:
            tracking-network:
                ipv4_address: 172.18.10.20
                
    putovanja-db:
        image: mysql:5.7
        volumes:
            - /opt/data-putovanja:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: iamroot
            MYSQL_USER: spring
            MYSQL_PASSWORD: spring
            MYSQL_DATABASE: putovanja
        expose:
            - 3306
        ports:
            - 3307:3306
        networks:
            tracking-network:
                ipv4_address: 172.18.10.21
                
    log-db:
        image: mysql:5.7
        volumes:
            - /opt/data-log:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: iamroot
            MYSQL_USER: spring
            MYSQL_PASSWORD: spring
            MYSQL_DATABASE: log
        expose:
            - 3306
        ports:
            - 3308:3306
        networks:
            tracking-network:
                ipv4_address: 172.18.10.22
    eureka-server:
        container_name: eureka-server
        build:
            context: .
            dockerfile: Dockerfile-EurekaServer
        image: eureka-server:latest
        expose:
            - 8761
        ports:
            - 8761:8761
        networks:
            tracking-network:
                ipv4_address: 172.18.10.10
    rabbit-mq-service:
        container_name: rabbit-mq-server
        build:
            context: .
            dockerfile: Dockerfile-rabbitmq
        image: rabbitmq:latest
        expose:
            - 5672
            - 15672
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            tracking-network:
                ipv4_address: 172.18.10.11
        links:
            - eureka-server:eureka-server
        depends_on:
            - eureka-server
        logging:
            driver: json-file
    auth-server:
        container_name: auth-server
        build:
            context: .
            dockerfile: Dockerfile-Auth
        image: auth-server:latest
        expose:
            - 9999
        ports:
            - 9999:9999
        networks:
            tracking-network:
                ipv4_address: 172.18.10.50
        depends_on:
            - eureka-server
            - Gateway
        logging:
            driver: json-file
            
    KorisniciService:
        container_name: KorisniciService
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-Korisnici
        image: korisnici:latest
        expose:
            - 8080
        ports:
            - 8080:8080
        networks:
            - tracking-network
        links:
            - eureka-server:eureka-server
            - korisnici-db:korisnici-db
        depends_on:
            - eureka-server
            - rabbit-mq-service
            - Gateway
            - korisnici-db
        logging:
            driver: json-file
    PutovanjaService:
        container_name: PutovanjaService
        build:
            context: .
            dockerfile: Dockerfile-Putovanja
        image: putovanja:latest
        expose:
            - 8081
        ports:
            - 8081:8081
        networks:
            - tracking-network
        links:
            - eureka-server:eureka-server
            - putovanja-db:putovanja-db
        depends_on:
            - eureka-server
            - Gateway
            - putovanja-db
        logging:
            driver: json-file
    LogoviService:
        container_name: LogoviService
        restart: always
        build:
            context: .
            dockerfile: Dockerfile-Logovi
        image: logovi:latest
        expose:
            - 8083
        ports:
            - 8083:8083
        networks:
            - tracking-network
        links:
            - eureka-server:eureka-server
            - log-db:log-db
        depends_on:
            - eureka-server
            - Gateway
            - log-db
        logging:
            driver: json-file
    Gateway:
        container_name: Gateway
        build:
            context: .
            dockerfile: Dockerfile-Gateway
        image: gateway:latest
        expose:
            - 8090
        ports:
            - 8090:8090
        networks:
            - tracking-network
        links:
            - eureka-server:eureka-server
        depends_on:
            - eureka-server
        logging:
            driver: json-file
